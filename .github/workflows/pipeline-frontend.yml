name: BSN Frontend Pipeline

on:
  push:
    branches:
      - main
    paths:
      - UI-book-network/**
      - docker/frontend/**
      - 'docker-compose.yml'
      - '.github/workflows/*-frontend.yml'
jobs:
  build-image:
    runs-on: ubuntu-22.04
    name: Build Frontend Docker Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '18'

      - name: Extract project version
        id: extract_version
        run: |
          cd UI-book-network
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT


#      - name: Install dependencies and build
#        run: |
#          cd UI-book-network
#          npm install
#          npm run build --prod
#
#      - name: Build Docker image
#        run: |
#          docker build -t bsn/bsn-ui:1.0.0 -f docker/frontend/Dockerfile .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#      - name: Push Docker image to Docker Hub
#        run: |
#          docker push bsn/bsn-ui:1.0.0

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: UI-book-network
          file: docker/frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{secrets.DOCKERHUB_USERNAME}}/bsn-ui:${{ steps.extract_version.outputs.VERSION }}, ${{secrets.DOCKERHUB_USERNAME}}/bsn-ui:latest

  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-22.04
    needs: build-image
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts

      - name: Create deployment folder
        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/

      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
            cd ci-cd
            sudo docker-compose -f docker-compose.yml pull -q
            sudo docker-compose -f docker-compose.yml up -d
          EOF
